0306f9bd1e411b17371490b7807d95ae
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ThemeContext = exports.ThemeConsumer = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _deepmerge = _interopRequireDefault(require("deepmerge"));

var _colors = _interopRequireDefault(require("./colors"));

var _colorsDark = _interopRequireDefault(require("./colorsDark"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ThemeContext = _react.default.createContext({
  theme: {
    colors: _colors.default
  }
});

exports.ThemeContext = ThemeContext;

var ThemeProvider = function (_React$Component) {
  (0, _inherits2.default)(ThemeProvider, _React$Component);

  var _super = _createSuper(ThemeProvider);

  function ThemeProvider(props) {
    var _this;

    (0, _classCallCheck2.default)(this, ThemeProvider);
    _this = _super.call(this, props);

    _this.updateTheme = function (updates) {
      _this.setState(function (_ref) {
        var theme = _ref.theme;
        return {
          theme: (0, _deepmerge.default)(theme, updates)
        };
      });
    };

    _this.replaceTheme = function (theme) {
      _this.setState(function () {
        return {
          theme: (0, _deepmerge.default)(_this.defaultTheme, theme)
        };
      });
    };

    _this.getTheme = function () {
      return _this.state.theme;
    };

    var defaultColors = props.useDark ? _colorsDark.default : _colors.default;
    _this.defaultTheme = (0, _deepmerge.default)({
      colors: defaultColors
    }, props.theme);
    _this.state = {
      theme: _this.defaultTheme,
      useDark: Boolean(props.useDark)
    };
    return _this;
  }

  (0, _createClass2.default)(ThemeProvider, [{
    key: "render",
    value: function render() {
      return _react.default.createElement(ThemeContext.Provider, {
        value: {
          theme: this.state.theme,
          updateTheme: this.updateTheme,
          replaceTheme: this.replaceTheme
        }
      }, this.props.children);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      var useDark = props.useDark;

      var isTheme = function isTheme(theme) {
        return !(Object.keys(theme).length === 0 && theme.constructor === Object);
      };

      if (useDark !== state.useDark || isTheme(props.theme) && props.theme !== state.theme) {
        var defaultColors = useDark ? _colorsDark.default : _colors.default;
        return {
          theme: (0, _deepmerge.default)(state.theme, (0, _deepmerge.default)({
            colors: defaultColors
          }, props.theme)),
          useDark: useDark
        };
      }

      return null;
    }
  }]);
  return ThemeProvider;
}(_react.default.Component);

exports.default = ThemeProvider;
ThemeProvider.defaultProps = {
  theme: {},
  useDark: false
};
var ThemeConsumer = ThemeContext.Consumer;
exports.ThemeConsumer = ThemeConsumer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUaGVtZUNvbnRleHQiLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ0aGVtZSIsImNvbG9ycyIsIlRoZW1lUHJvdmlkZXIiLCJwcm9wcyIsInVwZGF0ZVRoZW1lIiwidXBkYXRlcyIsInNldFN0YXRlIiwiZGVlcG1lcmdlIiwicmVwbGFjZVRoZW1lIiwiZGVmYXVsdFRoZW1lIiwiZ2V0VGhlbWUiLCJzdGF0ZSIsImRlZmF1bHRDb2xvcnMiLCJ1c2VEYXJrIiwiZGFya0NvbG9ycyIsIkJvb2xlYW4iLCJjaGlsZHJlbiIsImlzVGhlbWUiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwiY29uc3RydWN0b3IiLCJDb21wb25lbnQiLCJkZWZhdWx0UHJvcHMiLCJUaGVtZUNvbnN1bWVyIiwiQ29uc3VtZXIiXSwic291cmNlcyI6WyJUaGVtZVByb3ZpZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZGVlcG1lcmdlIGZyb20gJ2RlZXBtZXJnZSc7XG5pbXBvcnQgY29sb3JzIGZyb20gJy4vY29sb3JzJztcbmltcG9ydCBkYXJrQ29sb3JzIGZyb20gJy4vY29sb3JzRGFyayc7XG5leHBvcnQgY29uc3QgVGhlbWVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh7XG4gICAgdGhlbWU6IHtcbiAgICAgICAgY29sb3JzLFxuICAgIH0sXG59KTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRoZW1lUHJvdmlkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy51cGRhdGVUaGVtZSA9ICh1cGRhdGVzKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKCh7IHRoZW1lIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgdGhlbWU6IGRlZXBtZXJnZSh0aGVtZSwgdXBkYXRlcyksXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucmVwbGFjZVRoZW1lID0gKHRoZW1lKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKCgpID0+ICh7XG4gICAgICAgICAgICAgICAgdGhlbWU6IGRlZXBtZXJnZSh0aGlzLmRlZmF1bHRUaGVtZSwgdGhlbWUpLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmdldFRoZW1lID0gKCkgPT4gdGhpcy5zdGF0ZS50aGVtZTtcbiAgICAgICAgY29uc3QgZGVmYXVsdENvbG9ycyA9IHByb3BzLnVzZURhcmsgPyBkYXJrQ29sb3JzIDogY29sb3JzO1xuICAgICAgICB0aGlzLmRlZmF1bHRUaGVtZSA9IGRlZXBtZXJnZSh7XG4gICAgICAgICAgICBjb2xvcnM6IGRlZmF1bHRDb2xvcnMsXG4gICAgICAgIH0sIHByb3BzLnRoZW1lKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHRoZW1lOiB0aGlzLmRlZmF1bHRUaGVtZSxcbiAgICAgICAgICAgIHVzZURhcms6IEJvb2xlYW4ocHJvcHMudXNlRGFyayksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHN0YXRpYyBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMocHJvcHMsIHN0YXRlKSB7XG4gICAgICAgIGNvbnN0IHsgdXNlRGFyayB9ID0gcHJvcHM7XG4gICAgICAgIGNvbnN0IGlzVGhlbWUgPSAodGhlbWUpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAhKE9iamVjdC5rZXlzKHRoZW1lKS5sZW5ndGggPT09IDAgJiYgdGhlbWUuY29uc3RydWN0b3IgPT09IE9iamVjdCk7XG4gICAgICAgIH07XG4gICAgICAgIC8vaXNUaGVtZSB3aWxsIGNoZWNrIGlmIHRoZSB0aGVtZSBpcyBwcm92aWRlZCBieSB1c2VyIGFuZCB3aWxsIHVwZGF0ZSB0aGUgdGhlbWUgb25seSBpZiBpdHMgcHJvdmlkZWQgYnkgdXNlclxuICAgICAgICAvL05vdCBjaGVja2luZyBpZiB0aGUgdGhlbWUgZXhpc3Qgb3Igbm90IHdpbGwgYWx3YXlzIHJlc3VsdCBpbiBpZiBzdGF0ZW1lbnQgZ2V0dGluZyBleGVjdXRlZCBhcyBwcm9wcy50aGVtZSAhPT0gc3RhdGUudGhlbWUgaWYgdGhlbWUgaXMgbm90IHByb3ZpZGVkXG4gICAgICAgIGlmICh1c2VEYXJrICE9PSBzdGF0ZS51c2VEYXJrIHx8XG4gICAgICAgICAgICAoaXNUaGVtZShwcm9wcy50aGVtZSkgJiYgcHJvcHMudGhlbWUgIT09IHN0YXRlLnRoZW1lKSkge1xuICAgICAgICAgICAgY29uc3QgZGVmYXVsdENvbG9ycyA9IHVzZURhcmsgPyBkYXJrQ29sb3JzIDogY29sb3JzO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0aGVtZTogZGVlcG1lcmdlKHN0YXRlLnRoZW1lLCBkZWVwbWVyZ2Uoe1xuICAgICAgICAgICAgICAgICAgICBjb2xvcnM6IGRlZmF1bHRDb2xvcnMsXG4gICAgICAgICAgICAgICAgfSwgcHJvcHMudGhlbWUpKSxcbiAgICAgICAgICAgICAgICB1c2VEYXJrLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKDxUaGVtZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3tcbiAgICAgICAgICAgIHRoZW1lOiB0aGlzLnN0YXRlLnRoZW1lLFxuICAgICAgICAgICAgdXBkYXRlVGhlbWU6IHRoaXMudXBkYXRlVGhlbWUsXG4gICAgICAgICAgICByZXBsYWNlVGhlbWU6IHRoaXMucmVwbGFjZVRoZW1lLFxuICAgICAgICB9fT5cbiAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICA8L1RoZW1lQ29udGV4dC5Qcm92aWRlcj4pO1xuICAgIH1cbn1cblRoZW1lUHJvdmlkZXIuZGVmYXVsdFByb3BzID0ge1xuICAgIHRoZW1lOiB7fSxcbiAgICB1c2VEYXJrOiBmYWxzZSxcbn07XG5leHBvcnQgY29uc3QgVGhlbWVDb25zdW1lciA9IFRoZW1lQ29udGV4dC5Db25zdW1lcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBQ08sSUFBTUEsWUFBWSxHQUFHQyxjQUFBLENBQU1DLGFBQU4sQ0FBb0I7RUFDNUNDLEtBQUssRUFBRTtJQUNIQyxNQUFNLEVBQU5BO0VBREc7QUFEcUMsQ0FBcEIsQ0FBckI7Ozs7SUFLY0MsYTs7Ozs7RUFDakIsdUJBQVlDLEtBQVosRUFBbUI7SUFBQTs7SUFBQTtJQUNmLDBCQUFNQSxLQUFOOztJQUNBLE1BQUtDLFdBQUwsR0FBbUIsVUFBQ0MsT0FBRCxFQUFhO01BQzVCLE1BQUtDLFFBQUwsQ0FBYztRQUFBLElBQUdOLEtBQUgsUUFBR0EsS0FBSDtRQUFBLE9BQWdCO1VBQzFCQSxLQUFLLEVBQUUsSUFBQU8sa0JBQUEsRUFBVVAsS0FBVixFQUFpQkssT0FBakI7UUFEbUIsQ0FBaEI7TUFBQSxDQUFkO0lBR0gsQ0FKRDs7SUFLQSxNQUFLRyxZQUFMLEdBQW9CLFVBQUNSLEtBQUQsRUFBVztNQUMzQixNQUFLTSxRQUFMLENBQWM7UUFBQSxPQUFPO1VBQ2pCTixLQUFLLEVBQUUsSUFBQU8sa0JBQUEsRUFBVSxNQUFLRSxZQUFmLEVBQTZCVCxLQUE3QjtRQURVLENBQVA7TUFBQSxDQUFkO0lBR0gsQ0FKRDs7SUFLQSxNQUFLVSxRQUFMLEdBQWdCO01BQUEsT0FBTSxNQUFLQyxLQUFMLENBQVdYLEtBQWpCO0lBQUEsQ0FBaEI7O0lBQ0EsSUFBTVksYUFBYSxHQUFHVCxLQUFLLENBQUNVLE9BQU4sR0FBZ0JDLG1CQUFoQixHQUE2QmIsZUFBbkQ7SUFDQSxNQUFLUSxZQUFMLEdBQW9CLElBQUFGLGtCQUFBLEVBQVU7TUFDMUJOLE1BQU0sRUFBRVc7SUFEa0IsQ0FBVixFQUVqQlQsS0FBSyxDQUFDSCxLQUZXLENBQXBCO0lBR0EsTUFBS1csS0FBTCxHQUFhO01BQ1RYLEtBQUssRUFBRSxNQUFLUyxZQURIO01BRVRJLE9BQU8sRUFBRUUsT0FBTyxDQUFDWixLQUFLLENBQUNVLE9BQVA7SUFGUCxDQUFiO0lBakJlO0VBcUJsQjs7OztXQW9CRCxrQkFBUztNQUNMLE9BQVEsNkJBQUMsWUFBRCxDQUFjLFFBQWQ7UUFBdUIsS0FBSyxFQUFFO1VBQ2xDYixLQUFLLEVBQUUsS0FBS1csS0FBTCxDQUFXWCxLQURnQjtVQUVsQ0ksV0FBVyxFQUFFLEtBQUtBLFdBRmdCO1VBR2xDSSxZQUFZLEVBQUUsS0FBS0E7UUFIZTtNQUE5QixHQUtQLEtBQUtMLEtBQUwsQ0FBV2EsUUFMSixDQUFSO0lBT0g7OztXQTNCRCxrQ0FBZ0NiLEtBQWhDLEVBQXVDUSxLQUF2QyxFQUE4QztNQUMxQyxJQUFRRSxPQUFSLEdBQW9CVixLQUFwQixDQUFRVSxPQUFSOztNQUNBLElBQU1JLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUNqQixLQUFELEVBQVc7UUFDdkIsT0FBTyxFQUFFa0IsTUFBTSxDQUFDQyxJQUFQLENBQVluQixLQUFaLEVBQW1Cb0IsTUFBbkIsS0FBOEIsQ0FBOUIsSUFBbUNwQixLQUFLLENBQUNxQixXQUFOLEtBQXNCSCxNQUEzRCxDQUFQO01BQ0gsQ0FGRDs7TUFLQSxJQUFJTCxPQUFPLEtBQUtGLEtBQUssQ0FBQ0UsT0FBbEIsSUFDQ0ksT0FBTyxDQUFDZCxLQUFLLENBQUNILEtBQVAsQ0FBUCxJQUF3QkcsS0FBSyxDQUFDSCxLQUFOLEtBQWdCVyxLQUFLLENBQUNYLEtBRG5ELEVBQzJEO1FBQ3ZELElBQU1ZLGFBQWEsR0FBR0MsT0FBTyxHQUFHQyxtQkFBSCxHQUFnQmIsZUFBN0M7UUFDQSxPQUFPO1VBQ0hELEtBQUssRUFBRSxJQUFBTyxrQkFBQSxFQUFVSSxLQUFLLENBQUNYLEtBQWhCLEVBQXVCLElBQUFPLGtCQUFBLEVBQVU7WUFDcENOLE1BQU0sRUFBRVc7VUFENEIsQ0FBVixFQUUzQlQsS0FBSyxDQUFDSCxLQUZxQixDQUF2QixDQURKO1VBSUhhLE9BQU8sRUFBUEE7UUFKRyxDQUFQO01BTUg7O01BQ0QsT0FBTyxJQUFQO0lBQ0g7OztFQXpDc0NmLGNBQUEsQ0FBTXdCLFM7OztBQW9EakRwQixhQUFhLENBQUNxQixZQUFkLEdBQTZCO0VBQ3pCdkIsS0FBSyxFQUFFLEVBRGtCO0VBRXpCYSxPQUFPLEVBQUU7QUFGZ0IsQ0FBN0I7QUFJTyxJQUFNVyxhQUFhLEdBQUczQixZQUFZLENBQUM0QixRQUFuQyJ9