e1352444290205b1fb4df94636452027
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _deepmerge = _interopRequireDefault(require("deepmerge"));

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

var _ThemeProvider = require("./ThemeProvider");

var _theme = _interopRequireDefault(require("./theme"));

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var isClassComponent = function isClassComponent(Component) {
  return Boolean(Component.prototype && Component.prototype.isReactComponent);
};

var ThemedComponent = function ThemedComponent(WrappedComponent, themeKey, displayName) {
  return (0, _extends2.default)(function (props, forwardedRef) {
    var children = props.children,
        rest = __rest(props, ["children"]);

    return _react.default.createElement(_ThemeProvider.ThemeConsumer, null, function (context) {
      if (!context) {
        var _newProps = (0, _extends2.default)((0, _extends2.default)({}, rest), {
          theme: _theme.default,
          children: children
        });

        return isClassComponent(WrappedComponent) ? _react.default.createElement(WrappedComponent, (0, _extends2.default)({
          ref: forwardedRef
        }, _newProps)) : _react.default.createElement(WrappedComponent, _newProps);
      }

      var theme = context.theme,
          updateTheme = context.updateTheme,
          replaceTheme = context.replaceTheme;
      var newProps = (0, _extends2.default)((0, _extends2.default)({
        theme: theme,
        updateTheme: updateTheme,
        replaceTheme: replaceTheme
      }, (0, _deepmerge.default)(themeKey && theme[themeKey] || {}, rest, {
        clone: false
      })), {
        children: children
      });

      if (isClassComponent(WrappedComponent)) {
        return _react.default.createElement(WrappedComponent, (0, _extends2.default)({
          ref: forwardedRef
        }, newProps));
      }

      return _react.default.createElement(WrappedComponent, newProps);
    });
  }, {
    displayName: displayName
  });
};

function withTheme(WrappedComponent, themeKey) {
  var name = themeKey ? "Themed." + themeKey : "Themed." + (WrappedComponent.displayName || WrappedComponent.name || 'Component');
  var Component = ThemedComponent(WrappedComponent, themeKey, name);

  if (isClassComponent(WrappedComponent)) {
    return (0, _hoistNonReactStatics.default)(_react.default.forwardRef(Component), WrappedComponent);
  }

  return Component;
}

var _default = withTheme;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImlzQ2xhc3NDb21wb25lbnQiLCJDb21wb25lbnQiLCJCb29sZWFuIiwiaXNSZWFjdENvbXBvbmVudCIsIlRoZW1lZENvbXBvbmVudCIsIldyYXBwZWRDb21wb25lbnQiLCJ0aGVtZUtleSIsImRpc3BsYXlOYW1lIiwicHJvcHMiLCJmb3J3YXJkZWRSZWYiLCJjaGlsZHJlbiIsInJlc3QiLCJjb250ZXh0IiwibmV3UHJvcHMiLCJ0aGVtZSIsIkRlZmF1bHRUaGVtZSIsInVwZGF0ZVRoZW1lIiwicmVwbGFjZVRoZW1lIiwiZGVlcG1lcmdlIiwiY2xvbmUiLCJ3aXRoVGhlbWUiLCJuYW1lIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJSZWFjdCIsImZvcndhcmRSZWYiXSwic291cmNlcyI6WyJ3aXRoVGhlbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWVwbWVyZ2UgZnJvbSAnZGVlcG1lcmdlJztcbmltcG9ydCBob2lzdE5vblJlYWN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5pbXBvcnQgeyBUaGVtZUNvbnN1bWVyIH0gZnJvbSAnLi9UaGVtZVByb3ZpZGVyJztcbmltcG9ydCBEZWZhdWx0VGhlbWUgZnJvbSAnLi90aGVtZSc7XG5jb25zdCBpc0NsYXNzQ29tcG9uZW50ID0gKENvbXBvbmVudCkgPT4gQm9vbGVhbihDb21wb25lbnQucHJvdG90eXBlICYmIENvbXBvbmVudC5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudCk7XG5jb25zdCBUaGVtZWRDb21wb25lbnQgPSAoV3JhcHBlZENvbXBvbmVudCwgdGhlbWVLZXksIGRpc3BsYXlOYW1lKSA9PiB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICAgICAgY29uc3QgeyBjaGlsZHJlbiB9ID0gcHJvcHMsIHJlc3QgPSBfX3Jlc3QocHJvcHMsIFtcImNoaWxkcmVuXCJdKTtcbiAgICAgICAgcmV0dXJuICg8VGhlbWVDb25zdW1lcj5cbiAgICAgICAgICB7KGNvbnRleHQpID0+IHtcbiAgICAgICAgICAgIC8vIElmIHVzZXIgaXNuJ3QgdXNpbmcgVGhlbWVQcm92aWRlclxuICAgICAgICAgICAgaWYgKCFjb250ZXh0KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3UHJvcHMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlc3QpLCB7IHRoZW1lOiBEZWZhdWx0VGhlbWUsIGNoaWxkcmVuIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBpc0NsYXNzQ29tcG9uZW50KFdyYXBwZWRDb21wb25lbnQpID8gKDxXcmFwcGVkQ29tcG9uZW50IHJlZj17Zm9yd2FyZGVkUmVmfSB7Li4ubmV3UHJvcHN9Lz4pIDogKDxXcmFwcGVkQ29tcG9uZW50IHsuLi5uZXdQcm9wc30vPik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB7IHRoZW1lLCB1cGRhdGVUaGVtZSwgcmVwbGFjZVRoZW1lIH0gPSBjb250ZXh0O1xuICAgICAgICAgICAgY29uc3QgbmV3UHJvcHMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oeyB0aGVtZSxcbiAgICAgICAgICAgICAgICB1cGRhdGVUaGVtZSxcbiAgICAgICAgICAgICAgICByZXBsYWNlVGhlbWUgfSwgZGVlcG1lcmdlKCh0aGVtZUtleSAmJlxuICAgICAgICAgICAgICAgIHRoZW1lW3RoZW1lS2V5XSkgfHxcbiAgICAgICAgICAgICAgICB7fSwgcmVzdCwge1xuICAgICAgICAgICAgICAgIGNsb25lOiBmYWxzZSxcbiAgICAgICAgICAgIH0pKSwgeyBjaGlsZHJlbiB9KTtcbiAgICAgICAgICAgIGlmIChpc0NsYXNzQ29tcG9uZW50KFdyYXBwZWRDb21wb25lbnQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDxXcmFwcGVkQ29tcG9uZW50IHJlZj17Zm9yd2FyZGVkUmVmfSB7Li4ubmV3UHJvcHN9Lz47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gPFdyYXBwZWRDb21wb25lbnQgey4uLm5ld1Byb3BzfS8+O1xuICAgICAgICB9fVxuICAgICAgICA8L1RoZW1lQ29uc3VtZXI+KTtcbiAgICB9LCB7IGRpc3BsYXlOYW1lOiBkaXNwbGF5TmFtZSB9KTtcbn07XG5mdW5jdGlvbiB3aXRoVGhlbWUoV3JhcHBlZENvbXBvbmVudCwgdGhlbWVLZXkpIHtcbiAgICBjb25zdCBuYW1lID0gdGhlbWVLZXlcbiAgICAgICAgPyBgVGhlbWVkLiR7dGhlbWVLZXl9YFxuICAgICAgICA6IGBUaGVtZWQuJHtXcmFwcGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IFdyYXBwZWRDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50J31gO1xuICAgIGNvbnN0IENvbXBvbmVudCA9IFRoZW1lZENvbXBvbmVudChXcmFwcGVkQ29tcG9uZW50LCB0aGVtZUtleSwgbmFtZSk7XG4gICAgaWYgKGlzQ2xhc3NDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCkpIHtcbiAgICAgICAgcmV0dXJuIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKFJlYWN0LmZvcndhcmRSZWYoQ29tcG9uZW50KSwgV3JhcHBlZENvbXBvbmVudCk7XG4gICAgfVxuICAgIHJldHVybiBDb21wb25lbnQ7XG59XG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWU7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQVdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQWZBLElBQUlBLE1BQU0sR0FBSSxRQUFRLEtBQUtBLE1BQWQsSUFBeUIsVUFBVUMsQ0FBVixFQUFhQyxDQUFiLEVBQWdCO0VBQ2xELElBQUlDLENBQUMsR0FBRyxFQUFSOztFQUNBLEtBQUssSUFBSUMsQ0FBVCxJQUFjSCxDQUFkO0lBQWlCLElBQUlJLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDUCxDQUFyQyxFQUF3Q0csQ0FBeEMsS0FBOENGLENBQUMsQ0FBQ08sT0FBRixDQUFVTCxDQUFWLElBQWUsQ0FBakUsRUFDYkQsQ0FBQyxDQUFDQyxDQUFELENBQUQsR0FBT0gsQ0FBQyxDQUFDRyxDQUFELENBQVI7RUFESjs7RUFFQSxJQUFJSCxDQUFDLElBQUksSUFBTCxJQUFhLE9BQU9JLE1BQU0sQ0FBQ0sscUJBQWQsS0FBd0MsVUFBekQsRUFDSSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFSLEVBQVdQLENBQUMsR0FBR0MsTUFBTSxDQUFDSyxxQkFBUCxDQUE2QlQsQ0FBN0IsQ0FBcEIsRUFB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