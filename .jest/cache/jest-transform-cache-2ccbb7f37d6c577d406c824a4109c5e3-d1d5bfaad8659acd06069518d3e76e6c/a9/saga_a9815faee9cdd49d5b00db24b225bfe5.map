{"version":3,"names":["appSaga","getInputData","all","takeLatest","AppActionTypes","GET_INPUT_DATA","action","call","customData","response","put","getInputDataDispatchActionSuccess","inputFields","console","log"],"sources":["saga.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { all, call, put, takeLatest } from '@redux-saga/core/effects'\nimport { IGetInputDataAction } from './actions'\nimport { AppActions, AppActionTypes } from './types'\nimport { getInputDataDispatchActionSuccess } from './dispatchers'\nimport { DataResponse } from '../../api/types/app'\nimport customData from '../../api/json/InputFields.json'\n\n\n/** Initial Saga **/\nexport function* appSaga() {\n  yield all([\n    takeLatest(AppActionTypes.GET_INPUT_DATA, getInputData)\n  ])\n}\n\n/** Saga functions **/\nfunction* getInputData(action: IGetInputDataAction) {\n  try {\n    const response: DataResponse.Response = yield call(() => customData)\n\n    yield put<AppActions>(getInputDataDispatchActionSuccess(response.inputFields))\n\n  } catch (error) { console.log('Get Input Data Error: ', error) }\n}\n"],"mappings":";;;;;;;;;AACA;;AAEA;;AACA;;AAEA;;wCAIiBA,O;yCAOPC,Y;;AAPH,SAAUD,OAAV;EAAA;IAAA;MAAA;QAAA;UAAA;UACL,OAAM,IAAAE,YAAA,EAAI,CACR,IAAAC,mBAAA,EAAWC,qBAAA,CAAeC,cAA1B,EAA0CJ,YAA1C,CADQ,CAAJ,CAAN;;QADK;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAOP,SAAUA,YAAV,CAAuBK,MAAvB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAE4C,OAAM,IAAAC,aAAA,EAAK;YAAA,OAAMC,oBAAN;UAAA,CAAL,CAAN;;QAF5C;UAEUC,QAFV;UAAA;UAII,OAAM,IAAAC,YAAA,EAAgB,IAAAC,8CAAA,EAAkCF,QAAQ,CAACG,WAA3C,CAAhB,CAAN;;QAJJ;UAAA;UAAA;;QAAA;UAAA;UAAA;UAMoBC,OAAO,CAACC,GAAR,CAAY,wBAAZ;;QANpB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"}