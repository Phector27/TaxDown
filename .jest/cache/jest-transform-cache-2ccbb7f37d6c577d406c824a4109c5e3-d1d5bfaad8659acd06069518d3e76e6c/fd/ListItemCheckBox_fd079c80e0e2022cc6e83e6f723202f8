e3d93e07f855d8ceeff9772b67cfd799
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _config = require("../config");

var _CheckBox = _interopRequireDefault(require("../checkbox/CheckBox"));

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var ListItemCheckBox = function ListItemCheckBox(_a) {
  var containerStyle = _a.containerStyle,
      props = __rest(_a, ["containerStyle"]);

  return _react.default.createElement(_CheckBox.default, (0, _extends2.default)({}, props, {
    containerStyle: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
  }));
};

var styles = _reactNative.StyleSheet.create({
  container: {
    margin: 0,
    marginRight: 0,
    marginLeft: 0,
    padding: 0
  }
});

var _default = (0, _config.withTheme)(ListItemCheckBox, 'ListItemCheckBox');

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkxpc3RJdGVtQ2hlY2tCb3giLCJfYSIsImNvbnRhaW5lclN0eWxlIiwicHJvcHMiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsInN0eWxlcyIsImNvbnRhaW5lciIsImNyZWF0ZSIsIm1hcmdpbiIsIm1hcmdpblJpZ2h0IiwibWFyZ2luTGVmdCIsInBhZGRpbmciLCJ3aXRoVGhlbWUiXSwic291cmNlcyI6WyJMaXN0SXRlbUNoZWNrQm94LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uL2NvbmZpZyc7XG5pbXBvcnQgQ2hlY2tCb3ggZnJvbSAnLi4vY2hlY2tib3gvQ2hlY2tCb3gnO1xuY29uc3QgTGlzdEl0ZW1DaGVja0JveCA9IChfYSkgPT4ge1xuICAgIHZhciB7IGNvbnRhaW5lclN0eWxlIH0gPSBfYSwgcHJvcHMgPSBfX3Jlc3QoX2EsIFtcImNvbnRhaW5lclN0eWxlXCJdKTtcbiAgICByZXR1cm4gKDxDaGVja0JveCB7Li4ucHJvcHN9IGNvbnRhaW5lclN0eWxlPXtTdHlsZVNoZWV0LmZsYXR0ZW4oW3N0eWxlcy5jb250YWluZXIsIGNvbnRhaW5lclN0eWxlXSl9Lz4pO1xufTtcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICBjb250YWluZXI6IHtcbiAgICAgICAgbWFyZ2luOiAwLFxuICAgICAgICBtYXJnaW5SaWdodDogMCxcbiAgICAgICAgbWFyZ2luTGVmdDogMCxcbiAgICAgICAgcGFkZGluZzogMCxcbiAgICB9LFxufSk7XG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoTGlzdEl0ZW1DaGVja0JveCwgJ0xpc3RJdGVtQ2hlY2tCb3gnKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBV0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBZEEsSUFBSUEsTUFBTSxHQUFJLFFBQVEsS0FBS0EsTUFBZCxJQUF5QixVQUFVQyxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7RUFDbEQsSUFBSUMsQ0FBQyxHQUFHLEVBQVI7O0VBQ0EsS0FBSyxJQUFJQyxDQUFULElBQWNILENBQWQ7SUFBaUIsSUFBSUksTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxjQUFqQixDQUFnQ0MsSUFBaEMsQ0FBcUNQLENBQXJDLEVBQXdDRyxDQUF4QyxLQUE4Q0YsQ0FBQyxDQUFDTyxPQUFGLENBQVVMLENBQVYsSUFBZSxDQUFqRSxFQUNiRCxDQUFDLENBQUNDLENBQUQsQ0FBRCxHQUFPSCxDQUFDLENBQUNHLENBQUQsQ0FBUjtFQURKOztFQUVBLElBQUlILENBQUMsSUFBSSxJQUFMLElBQWEsT0FBT0ksTUFBTSxDQUFDSyxxQkFBZCxLQUF3QyxVQUF6RCxFQUNJLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQVIsRUFBV1AsQ0FBQyxHQUFHQyxNQUFNLENBQUNLLHFCQUFQLENBQTZCVCxDQUE3QixDQUFwQixFQUFxRFUsQ0FBQyxHQUFHUCxDQUFDLENBQUNRLE1BQTNELEVBQW1FRCxDQUFDLEVBQXBFLEVBQXdFO0lBQ3BFLElBQUlULENBQUMsQ0FBQ08sT0FBRixDQUFVTCxDQUFDLENBQUNPLENBQUQsQ0FBWCxJQUFrQixDQUFsQixJQUF1Qk4sTUFBTSxDQUFDQyxTQUFQLENBQWlCTyxvQkFBakIsQ0FBc0NMLElBQXRDLENBQTJDUCxDQUEzQyxFQUE4Q0csQ0FBQyxDQUFDTyxDQUFELENBQS9DLENBQTNCLEVBQ0lSLENBQUMsQ0FBQ0MsQ0FBQyxDQUFDTyxDQUFELENBQUYsQ0FBRCxHQUFVVixDQUFDLENBQUNHLENBQUMsQ0FBQ08sQ0FBRCxDQUFGLENBQVg7RUFDUDtFQUNMLE9BQU9SLENBQVA7QUFDSCxDQVZEOztBQWVBLElBQU1XLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsRUFBRCxFQUFRO0VBQ3pCLElBQUVDLGNBQUYsR0FBcUJELEVBQXJCLENBQUVDLGNBQUY7RUFBQSxJQUF5QkMsS0FBekIsR0FBaUNqQixNQUFNLENBQUNlLEVBQUQsRUFBSyxDQUFDLGdCQUFELENBQUwsQ0FBdkM7O0VBQ0osT0FBUSw2QkFBQyxpQkFBRCw2QkFBY0UsS0FBZDtJQUFxQixjQUFjLEVBQUVDLHVCQUFBLENBQVdDLE9BQVgsQ0FBbUIsQ0FBQ0MsTUFBTSxDQUFDQyxTQUFSLEVBQW1CTCxjQUFuQixDQUFuQjtFQUFyQyxHQUFSO0FBQ0gsQ0FIRDs7QUFJQSxJQUFNSSxNQUFNLEdBQUdGLHVCQUFBLENBQVdJLE1BQVgsQ0FBa0I7RUFDN0JELFNBQVMsRUFBRTtJQUNQRSxNQUFNLEVBQUUsQ0FERDtJQUVQQyxXQUFXLEVBQUUsQ0FGTjtJQUdQQyxVQUFVLEVBQUUsQ0FITDtJQUlQQyxPQUFPLEVBQUU7RUFKRjtBQURrQixDQUFsQixDQUFmOztlQVFlLElBQUFDLGlCQUFBLEVBQVViLGdCQUFWLEVBQTRCLGtCQUE1QixDIn0=