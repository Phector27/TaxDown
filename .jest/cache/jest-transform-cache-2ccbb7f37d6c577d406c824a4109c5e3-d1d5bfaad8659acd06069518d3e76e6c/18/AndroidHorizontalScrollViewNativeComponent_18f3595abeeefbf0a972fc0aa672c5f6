c7074e9d7ce186a5d2e26796ce17ba8e
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var NativeComponentRegistry = _interopRequireWildcard(require("../../NativeComponent/NativeComponentRegistry"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var AndroidHorizontalScrollViewNativeComponent = NativeComponentRegistry.get('AndroidHorizontalScrollView', function () {
  return {
    uiViewClassName: 'AndroidHorizontalScrollView',
    bubblingEventTypes: {},
    directEventTypes: {},
    validAttributes: {
      decelerationRate: true,
      disableIntervalMomentum: true,
      endFillColor: {
        process: require('../../StyleSheet/processColor')
      },
      fadingEdgeLength: true,
      nestedScrollEnabled: true,
      overScrollMode: true,
      pagingEnabled: true,
      persistentScrollbar: true,
      scrollEnabled: true,
      scrollPerfTag: true,
      sendMomentumEvents: true,
      showsHorizontalScrollIndicator: true,
      snapToAlignment: true,
      snapToEnd: true,
      snapToInterval: true,
      snapToStart: true,
      snapToOffsets: true,
      contentOffset: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderRadius: true,
      borderStyle: true,
      borderRightColor: {
        process: require('../../StyleSheet/processColor')
      },
      borderColor: {
        process: require('../../StyleSheet/processColor')
      },
      borderBottomColor: {
        process: require('../../StyleSheet/processColor')
      },
      borderTopLeftRadius: true,
      borderTopColor: {
        process: require('../../StyleSheet/processColor')
      },
      removeClippedSubviews: true,
      borderTopRightRadius: true,
      borderLeftColor: {
        process: require('../../StyleSheet/processColor')
      }
    }
  };
});
var _default = AndroidHorizontalScrollViewNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQiLCJOYXRpdmVDb21wb25lbnRSZWdpc3RyeSIsImdldCIsInVpVmlld0NsYXNzTmFtZSIsImJ1YmJsaW5nRXZlbnRUeXBlcyIsImRpcmVjdEV2ZW50VHlwZXMiLCJ2YWxpZEF0dHJpYnV0ZXMiLCJkZWNlbGVyYXRpb25SYXRlIiwiZGlzYWJsZUludGVydmFsTW9tZW50dW0iLCJlbmRGaWxsQ29sb3IiLCJwcm9jZXNzIiwicmVxdWlyZSIsImZhZGluZ0VkZ2VMZW5ndGgiLCJuZXN0ZWRTY3JvbGxFbmFibGVkIiwib3ZlclNjcm9sbE1vZGUiLCJwYWdpbmdFbmFibGVkIiwicGVyc2lzdGVudFNjcm9sbGJhciIsInNjcm9sbEVuYWJsZWQiLCJzY3JvbGxQZXJmVGFnIiwic2VuZE1vbWVudHVtRXZlbnRzIiwic2hvd3NIb3Jpem9udGFsU2Nyb2xsSW5kaWNhdG9yIiwic25hcFRvQWxpZ25tZW50Iiwic25hcFRvRW5kIiwic25hcFRvSW50ZXJ2YWwiLCJzbmFwVG9TdGFydCIsInNuYXBUb09mZnNldHMiLCJjb250ZW50T2Zmc2V0IiwiYm9yZGVyQm90dG9tTGVmdFJhZGl1cyIsImJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJSaWdodENvbG9yIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJCb3R0b21Db2xvciIsImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJUb3BDb2xvciIsInJlbW92ZUNsaXBwZWRTdWJ2aWV3cyIsImJvcmRlclRvcFJpZ2h0UmFkaXVzIiwiYm9yZGVyTGVmdENvbG9yIl0sInNvdXJjZXMiOlsiQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7U2Nyb2xsVmlld05hdGl2ZVByb3BzIGFzIFByb3BzfSBmcm9tICcuL1Njcm9sbFZpZXdOYXRpdmVDb21wb25lbnRUeXBlJztcbmltcG9ydCB0eXBlIHtIb3N0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcbmltcG9ydCAqIGFzIE5hdGl2ZUNvbXBvbmVudFJlZ2lzdHJ5IGZyb20gJy4uLy4uL05hdGl2ZUNvbXBvbmVudC9OYXRpdmVDb21wb25lbnRSZWdpc3RyeSc7XG5cbmNvbnN0IEFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudDogSG9zdENvbXBvbmVudDxQcm9wcz4gPVxuICBOYXRpdmVDb21wb25lbnRSZWdpc3RyeS5nZXQ8UHJvcHM+KCdBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXcnLCAoKSA9PiAoe1xuICAgIHVpVmlld0NsYXNzTmFtZTogJ0FuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlldycsXG4gICAgYnViYmxpbmdFdmVudFR5cGVzOiB7fSxcbiAgICBkaXJlY3RFdmVudFR5cGVzOiB7fSxcbiAgICB2YWxpZEF0dHJpYnV0ZXM6IHtcbiAgICAgIGRlY2VsZXJhdGlvblJhdGU6IHRydWUsXG4gICAgICBkaXNhYmxlSW50ZXJ2YWxNb21lbnR1bTogdHJ1ZSxcbiAgICAgIGVuZEZpbGxDb2xvcjoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJyl9LFxuICAgICAgZmFkaW5nRWRnZUxlbmd0aDogdHJ1ZSxcbiAgICAgIG5lc3RlZFNjcm9sbEVuYWJsZWQ6IHRydWUsXG4gICAgICBvdmVyU2Nyb2xsTW9kZTogdHJ1ZSxcbiAgICAgIHBhZ2luZ0VuYWJsZWQ6IHRydWUsXG4gICAgICBwZXJzaXN0ZW50U2Nyb2xsYmFyOiB0cnVlLFxuICAgICAgc2Nyb2xsRW5hYmxlZDogdHJ1ZSxcbiAgICAgIHNjcm9sbFBlcmZUYWc6IHRydWUsXG4gICAgICBzZW5kTW9tZW50dW1FdmVudHM6IHRydWUsXG4gICAgICBzaG93c0hvcml6b250YWxTY3JvbGxJbmRpY2F0b3I6IHRydWUsXG4gICAgICBzbmFwVG9BbGlnbm1lbnQ6IHRydWUsXG4gICAgICBzbmFwVG9FbmQ6IHRydWUsXG4gICAgICBzbmFwVG9JbnRlcnZhbDogdHJ1ZSxcbiAgICAgIHNuYXBUb1N0YXJ0OiB0cnVlLFxuICAgICAgc25hcFRvT2Zmc2V0czogdHJ1ZSxcbiAgICAgIGNvbnRlbnRPZmZzZXQ6IHRydWUsXG4gICAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiB0cnVlLFxuICAgICAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IHRydWUsXG4gICAgICBib3JkZXJSYWRpdXM6IHRydWUsXG4gICAgICBib3JkZXJTdHlsZTogdHJ1ZSxcbiAgICAgIGJvcmRlclJpZ2h0Q29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpfSxcbiAgICAgIGJvcmRlckNvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKX0sXG4gICAgICBib3JkZXJCb3R0b21Db2xvcjoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJyl9LFxuICAgICAgYm9yZGVyVG9wTGVmdFJhZGl1czogdHJ1ZSxcbiAgICAgIGJvcmRlclRvcENvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKX0sXG4gICAgICByZW1vdmVDbGlwcGVkU3Vidmlld3M6IHRydWUsXG4gICAgICBib3JkZXJUb3BSaWdodFJhZGl1czogdHJ1ZSxcbiAgICAgIGJvcmRlckxlZnRDb2xvcjoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJyl9LFxuICAgIH0sXG4gIH0pKTtcblxuZXhwb3J0IGRlZmF1bHQgQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50O1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQVlBOzs7Ozs7QUFFQSxJQUFNQSwwQ0FBZ0UsR0FDcEVDLHVCQUF1QixDQUFDQyxHQUF4QixDQUFtQyw2QkFBbkMsRUFBa0U7RUFBQSxPQUFPO0lBQ3ZFQyxlQUFlLEVBQUUsNkJBRHNEO0lBRXZFQyxrQkFBa0IsRUFBRSxFQUZtRDtJQUd2RUMsZ0JBQWdCLEVBQUUsRUFIcUQ7SUFJdkVDLGVBQWUsRUFBRTtNQUNmQyxnQkFBZ0IsRUFBRSxJQURIO01BRWZDLHVCQUF1QixFQUFFLElBRlY7TUFHZkMsWUFBWSxFQUFFO1FBQUNDLE9BQU8sRUFBRUMsT0FBTyxDQUFDLCtCQUFEO01BQWpCLENBSEM7TUFJZkMsZ0JBQWdCLEVBQUUsSUFKSDtNQUtmQyxtQkFBbUIsRUFBRSxJQUxOO01BTWZDLGNBQWMsRUFBRSxJQU5EO01BT2ZDLGFBQWEsRUFBRSxJQVBBO01BUWZDLG1CQUFtQixFQUFFLElBUk47TUFTZkMsYUFBYSxFQUFFLElBVEE7TUFVZkMsYUFBYSxFQUFFLElBVkE7TUFXZkMsa0JBQWtCLEVBQUUsSUFYTDtNQVlmQyw4QkFBOEIsRUFBRSxJQVpqQjtNQWFmQyxlQUFlLEVBQUUsSUFiRjtNQWNmQyxTQUFTLEVBQUUsSUFkSTtNQWVmQyxjQUFjLEVBQUUsSUFmRDtNQWdCZkMsV0FBVyxFQUFFLElBaEJFO01BaUJmQyxhQUFhLEVBQUUsSUFqQkE7TUFrQmZDLGFBQWEsRUFBRSxJQWxCQTtNQW1CZkMsc0JBQXNCLEVBQUUsSUFuQlQ7TUFvQmZDLHVCQUF1QixFQUFFLElBcEJWO01BcUJmQyxZQUFZLEVBQUUsSUFyQkM7TUFzQmZDLFdBQVcsRUFBRSxJQXRCRTtNQXVCZkMsZ0JBQWdCLEVBQUU7UUFBQ3JCLE9BQU8sRUFBRUMsT0FBTyxDQUFDLCtCQUFEO01BQWpCLENBdkJIO01Bd0JmcUIsV0FBVyxFQUFFO1FBQUN0QixPQUFPLEVBQUVDLE9BQU8sQ0FBQywrQkFBRDtNQUFqQixDQXhCRTtNQXlCZnNCLGlCQUFpQixFQUFFO1FBQUN2QixPQUFPLEVBQUVDLE9BQU8sQ0FBQywrQkFBRDtNQUFqQixDQXpCSjtNQTBCZnVCLG1CQUFtQixFQUFFLElBMUJOO01BMkJmQyxjQUFjLEVBQUU7UUFBQ3pCLE9BQU8sRUFBRUMsT0FBTyxDQUFDLCtCQUFEO01BQWpCLENBM0JEO01BNEJmeUIscUJBQXFCLEVBQUUsSUE1QlI7TUE2QmZDLG9CQUFvQixFQUFFLElBN0JQO01BOEJmQyxlQUFlLEVBQUU7UUFBQzVCLE9BQU8sRUFBRUMsT0FBTyxDQUFDLCtCQUFEO01BQWpCO0lBOUJGO0VBSnNELENBQVA7QUFBQSxDQUFsRSxDQURGO2VBdUNlWCwwQyJ9