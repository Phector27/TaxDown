{"version":3,"names":["ImageBackground","_viewRef","_captureRef","ref","props","viewRef","setNativeProps","children","style","imageStyle","imageRef","flattenedStyle","flattenStyle","StyleSheet","absoluteFill","width","height","React","Component","module","exports"],"sources":["ImageBackground.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport Image from './Image';\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport View from '../Components/View/View';\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {ImageBackgroundProps} from './ImageProps';\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://reactnative.dev/img/opengraph.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component<ImageBackgroundProps> {\n  setNativeProps(props: Object) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?React.ElementRef<typeof View> = null;\n\n  _captureRef = (\n    ref: null | React$ElementRef<\n      React$AbstractComponent<\n        ViewProps,\n        React.ElementRef<HostComponent<ViewProps>>,\n      >,\n    >,\n  ) => {\n    this._viewRef = ref;\n  };\n\n  render(): React.Node {\n    const {children, style, imageStyle, imageRef, ...props} = this.props;\n    const flattenedStyle = flattenStyle(style);\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        style={style}\n        ref={this._captureRef}>\n        <Image\n          {...props}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              width: flattenedStyle?.width,\n              height: flattenedStyle?.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;IA6BMA,e;;;;;;;;;;;;;;;UASJC,Q,GAA2C,I;;UAE3CC,W,GAAc,UACZC,GADY,EAOT;MACH,MAAKF,QAAL,GAAgBE,GAAhB;IACD,C;;;;;;;WAnBD,wBAAeC,KAAf,EAA8B;MAE5B,IAAMC,OAAO,GAAG,KAAKJ,QAArB;;MACA,IAAII,OAAJ,EAAa;QACXA,OAAO,CAACC,cAAR,CAAuBF,KAAvB;MACD;IACF;;;WAeD,kBAAqB;MACnB,kBAA0D,KAAKA,KAA/D;MAAA,IAAOG,QAAP,eAAOA,QAAP;MAAA,IAAiBC,KAAjB,eAAiBA,KAAjB;MAAA,IAAwBC,UAAxB,eAAwBA,UAAxB;MAAA,IAAoCC,QAApC,eAAoCA,QAApC;MAAA,IAAiDN,KAAjD;MACA,IAAMO,cAAc,GAAG,IAAAC,qBAAA,EAAaJ,KAAb,CAAvB;MACA,OACE,oBAAC,aAAD;QACE,gCAAgC,EAAE,IADpC;QAEE,KAAK,EAAEA,KAFT;QAGE,GAAG,EAAE,KAAKN;MAHZ,GAIE,oBAAC,cAAD,6BACME,KADN;QAEE,KAAK,EAAE,CACLS,mBAAA,CAAWC,YADN,EAEL;UAQEC,KAAK,EAAEJ,cAAF,oBAAEA,cAAc,CAAEI,KARzB;UASEC,MAAM,EAAEL,cAAF,oBAAEA,cAAc,CAAEK;QAT1B,CAFK,EAaLP,UAbK,CAFT;QAiBE,GAAG,EAAEC;MAjBP,GAJF,EAuBGH,QAvBH,CADF;IA2BD;;;EApD2BU,KAAK,CAACC,S;;AAuDpCC,MAAM,CAACC,OAAP,GAAiBpB,eAAjB"}