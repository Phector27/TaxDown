299ab9646729b06046b0e170d6ee4580
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _bottomTabs = require("@react-navigation/bottom-tabs");

var _HostedImages = require("../utils/HostedImages");

var _HomeNavigator = _interopRequireDefault(require("./HomeNavigator"));

var _SubsNavigator = _interopRequireDefault(require("./SubsNavigator"));

var TabNames = ['Home', 'Subs'];
var TabScreens = {
  Home: _HomeNavigator.default,
  Subs: _SubsNavigator.default
};
var TabTitles = {
  Home: 'Home',
  Subs: 'Subs'
};
var TabStyle = {
  tabBarActiveTintColor: '#FFFFFF',
  tabBarInactiveTintColor: '#c9c9c9',
  tabBarActiveBackgroundColor: '#242645',
  tabBarInactiveBackgroundColor: '#242645',
  tabBarStyle: {
    position: 'absolute',
    backgroundColor: '#242645',
    borderTopWidth: 0
  },
  tabBarLabelStyle: {
    fontSize: 14
  },
  headerShown: false
};

var _createTabs = function _createTabs() {
  var Tab = (0, _bottomTabs.createBottomTabNavigator)();
  return TabNames.map(function (name, i) {
    return _react.default.createElement(Tab.Screen, {
      key: i,
      name: name,
      component: TabScreens[name],
      options: {
        unmountOnBlur: true,
        title: TabTitles[name],
        tabBarIcon: function tabBarIcon() {
          return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {
            style: {
              height: 30,
              width: 30,
              tintColor: '#c9c9c9'
            },
            source: {
              uri: name === 'Home' ? _HostedImages.homeImage : _HostedImages.favImage
            },
            resizeMode: "contain"
          }));
        }
      }
    });
  });
};

var MainNavigator = function MainNavigator() {
  var Tab = (0, _bottomTabs.createBottomTabNavigator)();
  return _react.default.createElement(Tab.Navigator, {
    initialRouteName: "Home",
    screenOptions: TabStyle
  }, _createTabs());
};

var _default = MainNavigator;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUYWJOYW1lcyIsIlRhYlNjcmVlbnMiLCJIb21lIiwiSG9tZU5hdmlnYXRvciIsIlN1YnMiLCJTdWJzTmF2aWdhdG9yIiwiVGFiVGl0bGVzIiwiVGFiU3R5bGUiLCJ0YWJCYXJBY3RpdmVUaW50Q29sb3IiLCJ0YWJCYXJJbmFjdGl2ZVRpbnRDb2xvciIsInRhYkJhckFjdGl2ZUJhY2tncm91bmRDb2xvciIsInRhYkJhckluYWN0aXZlQmFja2dyb3VuZENvbG9yIiwidGFiQmFyU3R5bGUiLCJwb3NpdGlvbiIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclRvcFdpZHRoIiwidGFiQmFyTGFiZWxTdHlsZSIsImZvbnRTaXplIiwiaGVhZGVyU2hvd24iLCJfY3JlYXRlVGFicyIsIlRhYiIsImNyZWF0ZUJvdHRvbVRhYk5hdmlnYXRvciIsIm1hcCIsIm5hbWUiLCJpIiwidW5tb3VudE9uQmx1ciIsInRpdGxlIiwidGFiQmFySWNvbiIsImhlaWdodCIsIndpZHRoIiwidGludENvbG9yIiwidXJpIiwiaG9tZUltYWdlIiwiZmF2SW1hZ2UiLCJNYWluTmF2aWdhdG9yIl0sInNvdXJjZXMiOlsiTWFpbk5hdmlnYXRvci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgVmlldywgSW1hZ2UgfSBmcm9tICdyZWFjdC1uYXRpdmUnXG5pbXBvcnQgeyBjcmVhdGVCb3R0b21UYWJOYXZpZ2F0b3IgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9ib3R0b20tdGFicydcbmltcG9ydCB7IGZhdkltYWdlLCBob21lSW1hZ2UgfSBmcm9tICcuLi91dGlscy9Ib3N0ZWRJbWFnZXMnXG5pbXBvcnQgSG9tZU5hdmlnYXRvciBmcm9tICcuL0hvbWVOYXZpZ2F0b3InXG5pbXBvcnQgU3Vic05hdmlnYXRvciBmcm9tICcuL1N1YnNOYXZpZ2F0b3InXG5cbmludGVyZmFjZSBJVGFiSXRlbXMge1xuICBIb21lOiBzdHJpbmcgfCAoKCkgPT4gdm9pZClcbiAgRmF2czogc3RyaW5nIHwgKCgpID0+IHZvaWQpXG59XG5cbmNvbnN0IFRhYk5hbWVzOiBzdHJpbmdbXSA9IFsnSG9tZScsICdTdWJzJ11cblxuY29uc3QgVGFiU2NyZWVuczogSVRhYkl0ZW1zIHwgYW55ID0ge1xuICBIb21lOiBIb21lTmF2aWdhdG9yLFxuICBTdWJzOiBTdWJzTmF2aWdhdG9yXG59XG5cbmNvbnN0IFRhYlRpdGxlczogSVRhYkl0ZW1zIHwgYW55ID0ge1xuICBIb21lOiAnSG9tZScsXG4gIFN1YnM6ICdTdWJzJ1xufVxuXG5jb25zdCBUYWJTdHlsZTogYW55ID0ge1xuICB0YWJCYXJBY3RpdmVUaW50Q29sb3I6ICcjRkZGRkZGJyxcbiAgdGFiQmFySW5hY3RpdmVUaW50Q29sb3I6ICcjYzljOWM5JyxcbiAgdGFiQmFyQWN0aXZlQmFja2dyb3VuZENvbG9yOiAnIzI0MjY0NScsXG4gIHRhYkJhckluYWN0aXZlQmFja2dyb3VuZENvbG9yOiAnIzI0MjY0NScsXG4gIHRhYkJhclN0eWxlOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnIzI0MjY0NScsXG4gICAgYm9yZGVyVG9wV2lkdGg6IDAsXG4gIH0sXG4gIHRhYkJhckxhYmVsU3R5bGU6IHtcbiAgICBmb250U2l6ZTogMTRcbiAgfSxcbiAgaGVhZGVyU2hvd246IGZhbHNlXG59XG5cbmNvbnN0IF9jcmVhdGVUYWJzID0gKCkgPT4ge1xuICBjb25zdCBUYWIgPSBjcmVhdGVCb3R0b21UYWJOYXZpZ2F0b3IoKVxuXG4gIHJldHVybiBUYWJOYW1lcy5tYXAoKG5hbWU6IHN0cmluZywgaTogbnVtYmVyKSA9PiAoXG4gICAgPFRhYi5TY3JlZW5cbiAgICAgIGtleT17aX1cbiAgICAgIG5hbWU9e25hbWV9XG4gICAgICBjb21wb25lbnQ9e1RhYlNjcmVlbnNbbmFtZV19XG4gICAgICBvcHRpb25zPXt7XG4gICAgICAgIHVubW91bnRPbkJsdXI6IHRydWUsXG4gICAgICAgIHRpdGxlOiBUYWJUaXRsZXNbbmFtZV0sXG4gICAgICAgIHRhYkJhckljb246ICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFZpZXc+XG4gICAgICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogMzAsIHdpZHRoOiAzMCwgdGludENvbG9yOiAnI2M5YzljOScgfX1cbiAgICAgICAgICAgICAgICBzb3VyY2U9e3tcbiAgICAgICAgICAgICAgICAgIHVyaTpcbiAgICAgICAgICAgICAgICAgICAgbmFtZSA9PT0gJ0hvbWUnXG4gICAgICAgICAgICAgICAgICAgID8gaG9tZUltYWdlXG4gICAgICAgICAgICAgICAgICAgIDogZmF2SW1hZ2VcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIHJlc2l6ZU1vZGU9XCJjb250YWluXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIH19XG4gICAgLz5cbiAgKSlcbn1cblxuY29uc3QgTWFpbk5hdmlnYXRvciA9ICgpID0+IHtcblxuICBjb25zdCBUYWIgPSBjcmVhdGVCb3R0b21UYWJOYXZpZ2F0b3IoKVxuXG4gIHJldHVybiAoXG4gICAgPFRhYi5OYXZpZ2F0b3JcbiAgICAgIGluaXRpYWxSb3V0ZU5hbWU9XCJIb21lXCJcbiAgICAgIHNjcmVlbk9wdGlvbnM9e1RhYlN0eWxlfVxuICAgID5cbiAgICAgIHtfY3JlYXRlVGFicygpfVxuICAgIDwvVGFiLk5hdmlnYXRvcj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBNYWluTmF2aWdhdG9yXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFPQSxJQUFNQSxRQUFrQixHQUFHLENBQUMsTUFBRCxFQUFTLE1BQVQsQ0FBM0I7QUFFQSxJQUFNQyxVQUEyQixHQUFHO0VBQ2xDQyxJQUFJLEVBQUVDLHNCQUQ0QjtFQUVsQ0MsSUFBSSxFQUFFQztBQUY0QixDQUFwQztBQUtBLElBQU1DLFNBQTBCLEdBQUc7RUFDakNKLElBQUksRUFBRSxNQUQyQjtFQUVqQ0UsSUFBSSxFQUFFO0FBRjJCLENBQW5DO0FBS0EsSUFBTUcsUUFBYSxHQUFHO0VBQ3BCQyxxQkFBcUIsRUFBRSxTQURIO0VBRXBCQyx1QkFBdUIsRUFBRSxTQUZMO0VBR3BCQywyQkFBMkIsRUFBRSxTQUhUO0VBSXBCQyw2QkFBNkIsRUFBRSxTQUpYO0VBS3BCQyxXQUFXLEVBQUU7SUFDWEMsUUFBUSxFQUFFLFVBREM7SUFFWEMsZUFBZSxFQUFFLFNBRk47SUFHWEMsY0FBYyxFQUFFO0VBSEwsQ0FMTztFQVVwQkMsZ0JBQWdCLEVBQUU7SUFDaEJDLFFBQVEsRUFBRTtFQURNLENBVkU7RUFhcEJDLFdBQVcsRUFBRTtBQWJPLENBQXRCOztBQWdCQSxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFNO0VBQ3hCLElBQU1DLEdBQUcsR0FBRyxJQUFBQyxvQ0FBQSxHQUFaO0VBRUEsT0FBT3JCLFFBQVEsQ0FBQ3NCLEdBQVQsQ0FBYSxVQUFDQyxJQUFELEVBQWVDLENBQWY7SUFBQSxPQUNsQiw2QkFBQyxHQUFELENBQUssTUFBTDtNQUNFLEdBQUcsRUFBRUEsQ0FEUDtNQUVFLElBQUksRUFBRUQsSUFGUjtNQUdFLFNBQVMsRUFBRXRCLFVBQVUsQ0FBQ3NCLElBQUQsQ0FIdkI7TUFJRSxPQUFPLEVBQUU7UUFDUEUsYUFBYSxFQUFFLElBRFI7UUFFUEMsS0FBSyxFQUFFcEIsU0FBUyxDQUFDaUIsSUFBRCxDQUZUO1FBR1BJLFVBQVUsRUFBRSxzQkFBTTtVQUNoQixPQUNFLDZCQUFDLGlCQUFELFFBQ0UsNkJBQUMsa0JBQUQ7WUFDRSxLQUFLLEVBQUU7Y0FBRUMsTUFBTSxFQUFFLEVBQVY7Y0FBY0MsS0FBSyxFQUFFLEVBQXJCO2NBQXlCQyxTQUFTLEVBQUU7WUFBcEMsQ0FEVDtZQUVFLE1BQU0sRUFBRTtjQUNOQyxHQUFHLEVBQ0RSLElBQUksS0FBSyxNQUFULEdBQ0VTLHVCQURGLEdBRUVDO1lBSkUsQ0FGVjtZQVFFLFVBQVUsRUFBQztVQVJiLEVBREYsQ0FERjtRQWNEO01BbEJNO0lBSlgsRUFEa0I7RUFBQSxDQUFiLENBQVA7QUEyQkQsQ0E5QkQ7O0FBZ0NBLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsR0FBTTtFQUUxQixJQUFNZCxHQUFHLEdBQUcsSUFBQUMsb0NBQUEsR0FBWjtFQUVBLE9BQ0UsNkJBQUMsR0FBRCxDQUFLLFNBQUw7SUFDRSxnQkFBZ0IsRUFBQyxNQURuQjtJQUVFLGFBQWEsRUFBRWQ7RUFGakIsR0FJR1ksV0FBVyxFQUpkLENBREY7QUFRRCxDQVpEOztlQWNlZSxhIn0=